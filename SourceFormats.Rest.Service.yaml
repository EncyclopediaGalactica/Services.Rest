openapi: '3.0.3'
info:
  title: Source Formats Rest Api
  description: |
    Source Formats Rest Api.
    This endpoint is used by the User Interface of Encyclopedia Galactica.
    This endpoint is part of the bigger system which follows Command-Query Responsibility Segregation, meaning
    every operation returns only a status code and an url. The url is the endpoint which should be polled for the
    operation result.
  version: 1.0.0
servers:
  - url: 'https://example.com'

paths:
  /v1/source_format:
    post:
      operationId: create_source_format
      description: |
        Indicates the system that based on the provided payload a new SourceFormat entity should be created
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/SourceFormatPrototype'
      responses:
        '202':
          description: |
            The request of creating a new Source Format object was accepted successfully
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/OperationResponsePrototype'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  /v1/source_format/{id}:

    parameters:
      - name: id
        in: path
        schema:
          type: integer
        description: |
          Unique identifier of a Source Format entity in the system
        allowEmptyValue: false

    patch:
      operationId: update_source_format
      description: |
        Indicates to the system that based on the provided payload the Source Format entity defined by id
        parameter should be updated
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/SourceFormatPatchPrototype'
      responses:
        '202':
          description: |
            The request of start updating the url parameter defined Source Format entity
            was accepted successfully
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/OperationResponsePrototype'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

    delete:
      operationId: delete_source_format
      description: |
        Indicates the system that the Source Format defined by the url parameter should be deleted
      responses:
        '202':
          description: |
            The request of deleting the indicated Source Format entity was acepted successfully
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/OperationResponsePrototype'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

    get:
      operationId: get_source_format
      description: |
        Requests the details of a specified SourceFormat entity
      responses:
        '202':
          description: |
            Request for the specified SourceFormat was accepted successfully.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/OperationResponsePrototype'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  /v1/source_formats/{offset}/{limit}:

    parameters:
      - name: offset
        in: path
        schema:
          type: integer
        description: Offset value of the pager functionality
        allowEmptyValue: true
      - name: limit
        in: path
        schema:
          type: integer
        description: Limit value of the pager functionality
        allowEmptyValue: true

    get:
      operationId: get_source_formats
      description: |
        Initiates listing of Source Formats
      responses:
        '202':
          description: |
            The request of listing Source Formats was accepted successfully
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/OperationResponsePrototype'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

components:

  responses:
    NotFound:
      description: There is no such endpoint
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/ErrorModel'
    Unauthorized:
      description: The user is not authorized
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/ErrorModel'
    OperationResult:
      description: |
        When the system successfully accepted an operation request provides this response which contains
        the details about where the operation results are available
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/OperationResponsePrototype'

  schemas:
    ErrorModel:
      type: object
      properties:
        code:
          type: string
        message:
          type: string

    SourceFormatModel:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of Source Format
        name:
          type: string
          description: Name of the Source Format
          minLength: 3
          maxLength: 255
        description:
          type: string
          description: Additional information about Source Format
          minLength: 3
          maxLength: 2500
      discriminator:
        propertyName: name
        mapping:
          SourceFormatPrototype: '#/components/schemas/SourceFormatPrototype'
          SourceFormatPatchPrototype: '#/components/schemas/SourceFormatPatchPrototype'

    SourceFormatPrototype:
      allOf:
        - $ref: '#/components/schemas/SourceFormatModel'
        - type: object
          required:
            - id
            - name
            - description

    SourceFormatPatchPrototype:
      allOf:
        - $ref: '#/components/schemas/SourceFormatModel'
        - type: object
          required:
            - id

    OperationResponsePrototype:
      type: object
      properties:
        url:
          type: string
          description: The url which should be called to get the result of the operation
        operation_id:
          type: string
          description: The unique id of the operation provided by the system
        status:
          type: string
          description: The status of the operation. It displays only whether the endpoint accepted the request or not.
          enum:
            - accepted
            - in_progress
            - failed
            - no_such_operation
        message:
          type: string
          description: If any error occurs the details of it can be found here
